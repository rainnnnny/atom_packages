{
  "_args": [
    [
      {
        "raw": "term.js@git+https://github.com/jeremyramin/term.js.git",
        "scope": null,
        "escapedName": "term.js",
        "name": "term.js",
        "rawSpec": "git+https://github.com/jeremyramin/term.js.git",
        "spec": "git+https://github.com/jeremyramin/term.js.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jeremyramin/term.js.git",
          "sshUrl": "git+ssh://git@github.com/jeremyramin/term.js.git",
          "httpsUrl": "git+https://github.com/jeremyramin/term.js.git",
          "gitUrl": "git://github.com/jeremyramin/term.js.git",
          "shortcut": "github:jeremyramin/term.js",
          "directUrl": "https://raw.githubusercontent.com/jeremyramin/term.js/master/package.json"
        }
      },
      "C:\\Users\\rainn\\AppData\\Local\\Temp\\d-11784-6948-10cuwzq.bri68yqfr\\package.tgz"
    ]
  ],
  "_from": "git+https://github.com/jeremyramin/term.js.git",
  "_id": "term.js@0.0.7",
  "_inCache": true,
  "_location": "/terminal-plus/term.js",
  "_phantomChildren": {},
  "_requested": {
    "raw": "term.js@git+https://github.com/jeremyramin/term.js.git",
    "scope": null,
    "escapedName": "term.js",
    "name": "term.js",
    "rawSpec": "git+https://github.com/jeremyramin/term.js.git",
    "spec": "git+https://github.com/jeremyramin/term.js.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jeremyramin/term.js.git",
      "sshUrl": "git+ssh://git@github.com/jeremyramin/term.js.git",
      "httpsUrl": "git+https://github.com/jeremyramin/term.js.git",
      "gitUrl": "git://github.com/jeremyramin/term.js.git",
      "shortcut": "github:jeremyramin/term.js",
      "directUrl": "https://raw.githubusercontent.com/jeremyramin/term.js/master/package.json"
    }
  },
  "_requiredBy": [
    "/terminal-plus"
  ],
  "_resolved": "git+https://github.com/jeremyramin/term.js.git#de1635fc2695e7d8165012d3b1d007d7ce60eea2",
  "_shasum": "522856eba44bc245a93b269c7a9b00a6a90ba7c0",
  "_shrinkwrap": null,
  "_spec": "term.js@git+https://github.com/jeremyramin/term.js.git",
  "_where": "C:\\Users\\rainn\\AppData\\Local\\Temp\\d-11784-6948-10cuwzq.bri68yqfr\\package.tgz",
  "author": {
    "name": "Christopher Jeffrey"
  },
  "bugs": {
    "url": "https://github.com/chjj/term.js/issues"
  },
  "dependencies": {},
  "description": "A terminal written in javascript",
  "devDependencies": {
    "express": "3.1.0",
    "pty.js": ">= 0.2.13",
    "socket.io": "0.9.13"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "de1635fc2695e7d8165012d3b1d007d7ce60eea2",
  "homepage": "https://github.com/chjj/term.js",
  "keywords": [
    "tty",
    "terminal",
    "term",
    "xterm"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "term.js",
  "optionalDependencies": {},
  "preferGlobal": false,
  "readme": "# term.js\r\n\r\nA full xterm clone written in javascript. Used by\r\n[**tty.js**](https://github.com/chjj/tty.js).\r\n\r\n## Example\r\n\r\nServer:\r\n\r\n``` js\r\nvar term = require('term.js');\r\napp.use(term.middleware());\r\n...\r\n```\r\n\r\nClient:\r\n\r\n``` js\r\nwindow.addEventListener('load', function() {\r\n  var socket = io.connect();\r\n  socket.on('connect', function() {\r\n    var term = new Terminal({\r\n      cols: 80,\r\n      rows: 24,\r\n      screenKeys: true\r\n    });\r\n\r\n    term.on('data', function(data) {\r\n      socket.emit('data', data);\r\n    });\r\n\r\n    term.on('title', function(title) {\r\n      document.title = title;\r\n    });\r\n\r\n    term.open(document.body);\r\n\r\n    term.write('\\x1b[31mWelcome to term.js!\\x1b[m\\r\\n');\r\n\r\n    socket.on('data', function(data) {\r\n      term.write(data);\r\n    });\r\n\r\n    socket.on('disconnect', function() {\r\n      term.destroy();\r\n    });\r\n  });\r\n}, false);\r\n```\r\n\r\n## Tmux-like\r\n\r\nWhile term.js has always supported copy/paste using the mouse, it now also\r\nsupports several keyboard based solutions for copy/paste.\r\n\r\nterm.js includes a tmux-like selection mode (enabled with the `screenKeys`\r\noption) which makes copy and paste very simple. `Ctrl-A` enters `prefix` mode,\r\nfrom here you can type `Ctrl-V` to paste. Press `[` in prefix mode to enter\r\nselection mode. To select text press `v` (or `space`) to enter visual mode, use\r\n`hjkl` to navigate and create a selection, and press `Ctrl-C` to copy.\r\n\r\n`Ctrl-C` (in visual mode) and `Ctrl-V` (in prefix mode) should work in any OS\r\nfor copy and paste. `y` (in visual mode) will work for copying only on X11\r\nsystems. It will copy to the primary selection.\r\n\r\nNote: `Ctrl-C` will also work in prefix mode for the regular OS/browser\r\nselection. If you want to select text with your mouse and copy it to the\r\nclipboard, simply select the text and type `Ctrl-A + Ctrl-C`, and\r\n`Ctrl-A + Ctrl-V` to paste it.\r\n\r\nFor mac users: consider `Ctrl` to be `Command/Apple` above.\r\n\r\n## Contribution and License Agreement\r\n\r\nIf you contribute code to this project, you are implicitly allowing your code\r\nto be distributed under the MIT license. You are also implicitly verifying that\r\nall code is your original work. `</legalese>`\r\n\r\n## License\r\n\r\nCopyright (c) 2012-2013, Christopher Jeffrey (MIT License)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/chjj/term.js.git"
  },
  "tags": [
    "tty",
    "terminal",
    "term",
    "xterm"
  ],
  "version": "0.0.7"
}
